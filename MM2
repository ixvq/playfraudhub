local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "ü§çLoyal's MM2 Scriptü§ç",
   LoadingTitle = "Loyal Hub",
   LoadingSubtitle = "By loyaltwice",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "scriptbyloyal"
   },
   Discord = {
      Enabled = true,
      Invite = "waSWukEAaF", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "MM2 Script | Key",
      Subtitle = "Key In Discord Server",
      Note = "Join Server From Misc Tab",
      FileName = "loyalhubkey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/jyasz0sp"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("üè†Universal", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Executed",
   Content = "Successfully Executed The Script",
   Duration = 4.5,
   Image = nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("Script Made By loyaltwice")
      end
   },
},
})

local Button = MainTab:CreateButton({
   Name = "Infinite Jump",
   Callback = function()
   -- LocalScript

local player = game.Players.LocalPlayer
local userInputService = game:GetService("UserInputService")
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function onJumpRequest()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
end

userInputService.JumpRequest:Connect(onJumpRequest)

-- Ensure the character's humanoid is always ready to jump
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
end)

   end,
})

local Slider = MainTab:CreateSlider({
   Name = "Walkspeed Slider",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "WalkspeedSlider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local FPSTab = Window:CreateTab("FPS", nil) -- Title, Image
local Section = MM2Tab:CreateSection("FPS")

local Button = FPSTab:CreateButton({
   Name = "Boost FPS",
   Callback = function()
        local Workspace = game:GetService("Workspace")

for i,v in pairs (Workspace:GetDescendants()) do
    if v.Name == "Pet" then
        v:Destroy()
    elseif v.Name == "KnifeDisplay" then
        v:Destroy()
    elseif v.Name == "GunDisplay" then
        v:Destroy()
    end
end
   end,
})

local MiscTab = Window:CreateTab("üé≤Misc", 4483362458) -- Title, Image
local Section = MiscTab:CreateSection("Misc")

local Toggle = MiscTab:CreateToggle({
   Name = "Auto Farm",
   CurrentValue = false,
   Flag = "toggleexample", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        print('hello')
   end,
})

local Input = MiscTab:CreateInput({
   Name = "Jump Power",
   PlaceholderText = "1-200",
   RemoveTextAfterFocusLost = true,
   Callback = function(Text)
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Text)

   end,
})
